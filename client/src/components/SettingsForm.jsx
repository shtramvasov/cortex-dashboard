import React from 'react';
import { useForm } from 'react-hook-form';
import { toast } from 'react-toastify';
import { useNavigate } from 'react-router-dom';
import avatar from '../images/avatar-default.svg';

function SettingsForm({ method, buttonText = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' }) {
	const {
		register,
		formState: { errors },
		handleSubmit,
	} = useForm();
  const navigate = useNavigate();
	const formSubmit = async (data) => {
		try {
			const response = await fetch('/settings', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(data),
			});
      if (data.username === 'cortex') {
        toast.error('–ü–∞—Ä–æ–ª—å –¥–ª—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å');
        return;
      } else {       
        toast.success('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω ü§´');
        navigate('/');
      }
		} catch (err) {
			console.error(err.message);
		}
	};

	return (
		<div className='settingspage__wrapper card card--big flex cols'>
			<h1 className='pb-80'>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</h1>
			<img src={avatar} alt={localStorage.getItem('username')} />
			<form
				className='settingspage__form flex cols'
				method={method}
				onSubmit={handleSubmit(formSubmit)}>
				<label>
					–ê–∫–∫–∞—É–Ω—Ç
					<input
						value={localStorage.getItem('username')}
						{...register('username')}
					/>
				</label>
				<label>
					–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
					<input
						{...register('password', {
							required: '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å',
							minLength: {
								value: 4,
								message: '–ü–∞—Ä–æ–ª—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞',
							},
							maxLength: {
								value: 12,
								message: '–ü–∞—Ä–æ–ª—å –Ω–µ –±–æ–ª—å—à–µ 12 —Å–∏–º–≤–æ–ª–æ–≤',
							},
						})}
					/>
					{errors?.password && (
						<p className='description error'>
							{errors?.password?.message || '–û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'}
						</p>
					)}
				</label>
				<button type='submit'>{buttonText}</button>
			</form>
		</div>
	);
}

export default SettingsForm;
